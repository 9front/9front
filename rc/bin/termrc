#!/bin/rc
# terminal startup
TIMESYNCARGS=(-rLa1000000)
NDBFILE=/lib/ndb/local

mntgen -s slashn && chmod 666 /srv/slashn

# bind all likely devices
for(i in S f k t m i v L P u U '$' Σ κ)
	bind -a '#'^$i /dev >/dev/null >[2=1]
rm -f /env/i

mount -qa /srv/usb /dev

# set up any partitions
diskparts

# start up local swapping
disk=`{ls /dev/sd*/swap >[2]/dev/null}
if (! ~ $#disk 0)
	swap $disk(1) >/dev/null >[2=1]
rm -f /env/disk

# we do this before we have a name.  we may need to do network
# setup so that we can get a name.
if(test -e /rc/bin/termrc.local)
	. /rc/bin/termrc.local

# cs sets sysname (termrc.local may already have started it so check)
if(! test -e /srv/cs && ! test -e /net/cs)
	ndb/cs -f $NDBFILE
sysname=`{cat /dev/sysname}
if(~ $#sysname 0 || ~ $sysname ''){
	sysname=cirno			# default
	echo -n $sysname >/dev/sysname
}

# machine specific startup (e.g., for devices not probed)
if(test -e /cfg/$sysname/termrc)
	. /cfg/$sysname/termrc

# start IP on the LAN, if not already configured.  diskless terminals
# are already configured by now.  It's commented out to avoid a long timeout
# on startup waiting for DHCP.
#
# If your site provides DHCP service,
#
#if(! test -e /net/ipifc/0/ctl)
#	ip/ipconfig
#
# Otherwise, see /cfg/$sysname/termrc (/cfg/example/termrc is an example).

# start dns if we have an internet
if(test -e /net/ipifc/0/ctl && ! test -e /srv/dns)
	ndb/dns -r

if(! ~ $terminal *vx32*){
	# start timesync if it isn't running and we weren't told not to
	if(! ps|grep -s timesync)
		if(! ~ $TIMESYNCARGS '')
			aux/timesync $TIMESYNCARGS
}

fn ask {
	if(~ $"$1 ask){
		echo -n $1
		echo -n $2
		echo -n ' ['
		echo -n $3
		echo -n '] '
		$1=`{read}
		if(~ $"$1 '!rc'){
			rc -i
			$1=ask
		}
		if(~ $#$1 0)
			$1=$3
		ask $*
	}
}

ask vgasize ' is (text, 640x480x8, 1024x768x16, ...)' 1024x768x16
if(! ~ $"vgasize '' text none){
	ask monitor ' is (vesa, xga, lcd, ...)' vesa
	if(! ~ $"monitor ''){
		if(test -f /dev/mousectl)
			ask mouseport ' is (ps2, ps2intellimouse, 0, 1, 2)' ps2
		if not
			mouseport=none
		@{
			rfork n
			if(~ $monitor vesa)
				aux/realemu
			aux/vga -l $vgasize
		}
		switch($mouseport){
		case ps2 ps2intellimouse 0 1 2
			aux/mouse $mouseport
			if(~ $accupoint 1)
				pipefile -dr /bin/aux/accupoint /dev/mouse
		}
	}
}
rm -f '/env/fn#ask'

if (test -f /dev/apm)
	aux/apm

dontkill '^(ipconfig|factotum|mntgen|kfs|cwfs.*|cs|dns|listen|reboot)$'
