No.
Actually this a well known process known as regulatory capture.
I count this as a Go feature.
Still, I never had need for this.
It will take decades to undo the damage Apple has done, if we ever recover.
The irc channel is #go-nuts in freenode, in case anyone was wondering.
we live in a world of dogmas
I honestly and deeply hope you fail completely.
The pretense that all languages are the same, and that features are interchangeable across languages is silly and probably a product of how homogeneous the programming languages monoculture has become.
Some times it seems that the only thing that differentiates most languages is the flavour of sugar they are covered in.
Just a note that #cat-v in freenode recently passed #plan9 in number of people ;)
Maybe.
I hate Google, I hate Microsoft, I hate Apple, (and I hate Canonical, and Red Hat, and...)
The whole tech industry is a huge pile of garbage.
You are right, if you care more about following byzantine specs than about producing working software.
Go code is incredibly concise and clean, while avoiding ambiguity.
In other words, use Go.
Use up memory and CPU cycles. And create jobs for mediocre programmers.
What does that have to do with anything?
This is one thing I love about Go.
I'm afraid your comments are misguided
Are you aware that in Go you can return multiple values?
Really?
I _love_ that argument!
Apparently for some people hypocrisy in the name of gathering power is a positive thing.
Could you be more specific about what things you like about Go?
It is a sad state of affairs, but not Go's fault.
if you don't understand English you have no business programming
You got it wrong.
Just because something is easy to do doesn't mean it is a good idea.
By the way, for redditors interested in Go there is /r/golang
It is quite simple actually.
I don't use OS X, but I have heard Java on OS X is also far from ideal.
I would recommend against learning C++, it will damage your brain.
Many people have mentioned that Go has made programming fun again for them.
Just switch to learn another programming language before it is too late and your brain suffers permanent damage.
You forgot the <sarcasm> tags.
I completely agree.
There is one and only one way to get encodings right, and is really simple: use UTF-8 everywhere.
Quite an accomplishment.
Hopefully not.
You are not alone.
Hehehe.
I have to doubt the value of more silly micro-benchmarks without really looking into what is going on or how things perform in real systems.
Great, it seems that JavaScript programmers are as stupid as their language.
Why?
You are sadly right about this.
The problem is that "modern" programming style (eg., design patterns), languages, frameworks and the like encourage incredibly verbose code with so many abstraction layers that trying to read it from top to bottom is like staring at a wall of concrete.
Fun fact: Larry Ellison and Steve Jobs were very close friends.
Its been measured hundreds of times.
Really would be nice to know what the plan is.
Yes, i know.
Ah, this is perfect!
That is all great, but your comment added ZERO useful information.
People are fucking stupid.
Really sad.
So "expressive" is the new euphemism for "insanely complex" nowdays?
Morals are subjective and individual, and in many cases in conflict with the law.
I'm sorry, but other than UTF-8 I don't think other *nixes have really absorbed anything from Plan 9, quite the contrary, they have ignored most of the lessons of Plan 9 and pushed in the opposite direction: adding ever more layers of complexity and ignoring the original Unix principles.
This is a good time to (re-)read John Perry Barlow 's Declaration of the Independence of Cyberspace.
One of the most important things in life is to know your limitations.
I don't see your point.
Sometimes the painfully obvious solution can be hard to see, even for somebody experienced.
I don't know any programmer anywhere that doesn't have to interact with code written outside their organization.
Humans are excellent at _thinking_ they are good at communicating with other humans, but when having to communicate complex things, there are tons of ambiguities and misunderstandings.
Don't do this, is pointless and doesn't do anything useful.
Honestly, of the code I have looked at, well over >60% does absolutely nothing and can just be deleted with no loss to functionality or reliability.
You do not know what you are doing.
I'm not sure why you would want to do things that way.
Simplicity is harder to reach than complexity.
This is more an implementation detail than anything.
That is not how I read it.
There are two problems: 1) People are uneducated and ignorant of history. 2) People have no taste.
I'm starting to suspect Node.js and its async insanity has done as much damage to the programming world as Java and inheritance.
That people manage to (ab)use it in ways it was never intended to doesn't make it a good feature.
This is one of the things I love about Go
Exactly.
That is not very specific.
Uhu?
What on earth makes you think that?
You are either extremely misinformed or trolling.
This is simply false.
And you are wrong again.
Really, if you don't know what you are talking about, better stop making claims or you will look very silly.
This code is absurd
fuck plan9
god i'm dead
the war is over
